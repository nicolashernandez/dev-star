# Simple Tokenizer property file
# -----------------------------------------------------------------------------
# Argument separators in the property file are whitespace and newline characters
# In comparison with command line, remove double quotes around argument values


# input file to process
# -----------------------------------------------------------------------------
# -i ../../teaching/4a.M1.ATAL.Env-Log/environnement-logiciel/data/samples/fr-wikipedia/txt/Affaire_Clearstream_2  
# --multi-lines-input (the default is to process the input text as a single line. Has consequences on the interpretation of regex expressions and the time processing. Not implemented.)


# tokenizer functioning configuration
# -----------------------------------------------------------------------------
# global regex flag
# -g "?iu:" # command line
# -g ?iu:

# files reporting the list of regex tokens to consider before simple tokenizing 
# -r regexfile
--regex-file tokenizer/tokens-regex-fr.txt


# -c character functioning
# current character
# 0 glues nothing
# 1 glues next 
# 2 glues previous
# 3 glues both sides
# u2019 RIGHT SINGLE QUOTATION MARK
# -c "'" 3 -c "\u2019" 3 -c "-" 3 # command line
--codepoint-functioning ' 3 
--codepoint-functioning \u2019 3 
--codepoint-functioning - 3 

# output configuration
# -----------------------------------------------------------------------------
# -o outputFormatCode
# wpl   a token per newline,
# wst-spl   whitespace separated tokens and a sentence per line. 
--output-format wst-spl

# --ws-to character (Output configuration. Replace all token whitespace characters with the specified character.)
# --ws-to "_"  # command line
--ws-to _ 

# -n newLineToken (Output configuration. Token to be considered as a newline separator.
# -n '.' -n '!' -n '?' # command line
--newline-token .
--newline-token ! 
--newline-token ? 

# --preserve-layout (Output configuration. Preserve the input text layout.)
--preserve-layout 

# -s (Output configuration. Sweep text to ouput: Remove redundant empty lines and whitespace characters between tokens. Not implemented.)
--sweep-output

# debugging
# -----------------------------------------------------------------------------
# -v (verbose mode)



